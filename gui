#!/usr/bin/env ruby

require 'gtk3'

class App < Gtk::Window

  def initialize
    super
    init_ui
  end

  def init_ui
    entry = Gtk::Entry.new
    entry.text = '/'
    entry.margin_top = 2

    path = Gtk::ToolItem.new
    path.add entry
    path.expand = true
    path.margin_right = 12

    back    = Gtk::Button.new
    back.image = Gtk::Image.new(stock: Gtk::Stock::GO_BACK,
                                size: Gtk::IconSize::MENU)
    forward = Gtk::Button.new
    forward.image = Gtk::Image.new(stock: Gtk::Stock::GO_FORWARD,
                                   size: Gtk::IconSize::MENU)
    up      = Gtk::Button.new
    up.image = Gtk::Image.new(stock: Gtk::Stock::GO_UP,
                              size: Gtk::IconSize::MENU)

    hbox = Gtk::Box.new :horizontal, 0
    hbox.add back
    hbox.add forward
    hbox.add up
    hbox.style_context.add_class Gtk::STYLE_CLASS_RAISED
    hbox.style_context.add_class Gtk::STYLE_CLASS_LINKED

    tools = Gtk::ToolItem.new
    tools.add hbox
    tools.margin_right = 12

    pixbuf = Gtk::IconTheme.default.load_icon 'list-add', 16, 0
    new_folder = Gtk::Button.new
    new_folder.image = Gtk::Image.new(pixbuf: pixbuf,
                                      size: Gtk::IconSize::MENU)
    new_folder.tooltip_text = 'New Folder'
    pixbuf = Gtk::IconTheme.default.load_icon 'document-new', 16, 0
    upload_folder = Gtk::Button.new
    upload_folder.image = Gtk::Image.new(pixbuf: pixbuf,
                                         size: Gtk::IconSize::MENU)
    upload_folder.tooltip_text = 'Upload Folder'
    pixbuf = Gtk::IconTheme.default.load_icon 'folder-new', 16, 0
    upload_file = Gtk::Button.new
    upload_file.image = Gtk::Image.new(pixbuf: pixbuf,
                                       size: Gtk::IconSize::MENU)
    upload_file.tooltip_text = 'Upload File'
    pixbuf = Gtk::IconTheme.default.load_icon 'system-run', 16, 0
    setting = Gtk::Button.new
    setting.image = Gtk::Image.new(pixbuf: pixbuf,
                                   size: Gtk::IconSize::MENU)
    setting.tooltip_text = 'Setting'

    hbox = Gtk::Box.new :horizontal, 0
    hbox.add new_folder
    hbox.add upload_folder
    hbox.add upload_file
    hbox.add setting
    hbox.style_context.add_class Gtk::STYLE_CLASS_RAISED
    hbox.style_context.add_class Gtk::STYLE_CLASS_LINKED

    preference = Gtk::ToolItem.new
    preference.add hbox

    toolbar = Gtk::Toolbar.new
    toolbar.add tools
    toolbar.add path
    toolbar.add preference
    toolbar.style_context.add_class Gtk::STYLE_CLASS_PRIMARY_TOOLBAR

    padding_col = Gtk::TreeViewColumn.new
    padding_col.sizing = Gtk::TreeViewColumnSizing::FIXED
    padding_col.fixed_width = 10
    padding_col.min_width = 10

    expander = Gtk::TreeViewColumn.new
    expander.sizing = Gtk::TreeViewColumnSizing::FIXED
    expander.fixed_width = 10
    expander.min_width = 10

    header = Gtk::CellRendererText.new
    header.xpad = 8
    header.ypad = 6
    header.weight = Pango::WEIGHT_BOLD
    header.weight_set = true

    text = Gtk::CellRendererText.new
    text.xpad = 0
    text.ypad = 3
    text.ellipsize = Pango::ELLIPSIZE_END
    text.ellipsize_set = true

    icon = Gtk::CellRendererPixbuf.new
    icon.xpad = 4
    icon.follow_state = true

    location = Gtk::TreeViewColumn.new
    location.pack_start icon,   expand: false, fill: false, padding: 0
    location.pack_start header, expand: false, fill: false, padding: 0
    location.pack_start text,   expand: false, fill: false, padding: 0
    location.set_attributes icon,   gicon: 0
    location.set_attributes header, text:  1, visible: 2
    location.set_attributes text,   text:  1, visible: 3
    location.set_cell_data_func icon do |column, cell, model, iter|
      if model.get_value iter, 0
        cell.visible = true
      else
        cell.visible = false
      end
    end

    last_col = Gtk::TreeViewColumn.new

    treestore = Gtk::TreeStore.new Gdk::Pixbuf, String, Object, Object
    root_iter = treestore.append nil
    root_iter[1] = 'Bookmarks'
    root_iter[2] = true
    pixbuf = Gtk::IconTheme.default.load_icon 'user-home', 16, 0
    location_iter = treestore.append root_iter
    location_iter[0] = pixbuf
    location_iter[1] = 'Home'
    location_iter[3] = true
    pixbuf = Gtk::IconTheme.default.load_icon 'folder', 16, 0
    location_iter = treestore.append root_iter
    location_iter[0] = pixbuf
    location_iter[1] = 'document'
    location_iter[3] = true

    treeview = Gtk::TreeView.new
    treeview.model = treestore
    treeview.append_column padding_col
    treeview.append_column expander
    treeview.append_column location
    treeview.append_column last_col
    treeview.headers_visible = false
    treeview.style_context.add_class 'treeview'
    treeview.expander_column = expander
    treeview.selection.signal_connect 'changed' do |selection|
      selection.each do |store, path, iter|
        if path.depth == 1
          selection.unselect_path path
        end
      end
      false
    end
    treeview.expand_all

    label = Gtk::Label.new
    label.text = '8.2TB / 10TB'

    padding = Gtk::Box.new :horizontal, 0
    padding.set_size_request -1, 10

    usage = Gtk::ProgressBar.new
    usage.fraction = 0.8
    usage.style_context.add_class 'grid'
    usage.margin_left = 18
    usage.margin_right = 18
    usage.set_size_request 30, 6

    status = Gtk::Box.new :vertical, 0
    status.pack_start usage,   expand: false, fill: false, padding: 0
    status.pack_start padding, expand: false, fill: false, padding: 0
    status.pack_start label,   expand: false, fill: false, padding: 0

    grid = Gtk::Table.new 24, 12, true
    grid.attach treeview, 0, 12,  0, 21
    grid.attach status,   0, 12, 21, 24

    places = Gtk::ScrolledWindow.new nil, nil
    places.shadow_type = Gtk::ShadowType::NONE
    places.set_policy Gtk::PolicyType::NEVER, Gtk::PolicyType::AUTOMATIC
    places.style_context.junction_sides = (Gtk::JunctionSides::RIGHT |
                                           Gtk::JunctionSides::LEFT)
    places.add grid
    places.style_context.add_class 'places'

    provider = Gtk::CssProvider.new
    display = Gdk::Display.default
    screen = display.default_screen
    Gtk::StyleContext.add_provider_for_screen screen, provider,
      Gtk::StyleProvider::PRIORITY_APPLICATION
    provider.load_from_path 'assets/style.css'

    liststore = Gtk::ListStore.new Gdk::Pixbuf, String, String, String, String

    #iconview = Gtk::IconView.new
    #iconview.model = liststore
    #iconview.pixbuf_column = 0
    #iconview.text_column = 1
    #iconview.item_orientation = Gtk::Orientation::HORIZONTAL
    #iconview.selection_mode = Gtk::SelectionMode::MULTIPLE

    %w(folder text-x-preview).each do |icon|
      iter = liststore.append
      pixbuf = Gtk::IconTheme.default.load_icon icon, 16, 0
      [pixbuf, 'Label', '3 kb', 'Folder', '2014-02-20'].each_with_index do |value, index|
        iter[index] = value
      end
    end

    icon = Gtk::CellRendererPixbuf.new
    text = Gtk::CellRendererText.new
    filename = Gtk::TreeViewColumn.new
    filename.title = 'Name'
    filename.pack_start icon, expand: false, fill: false, padding: 0
    filename.pack_start text, expand: false, fill: false, padding: 0
    filename.set_attributes icon, gicon: 0
    filename.set_attributes text, text:  1
    filename.expand = true
    filename.resizable = true

    text = Gtk::CellRendererText.new
    filesize = Gtk::TreeViewColumn.new
    filesize.title = 'Size'
    filesize.pack_start text, expand: false, fill: false, padding: 0
    filesize.set_attributes text, text: 2
    filesize.expand = true
    filesize.resizable = true

    text = Gtk::CellRendererText.new
    filetype = Gtk::TreeViewColumn.new
    filetype.title = 'Type'
    filetype.pack_start text, expand: false, fill: false, padding: 0
    filetype.set_attributes text, text: 3
    filetype.expand = true

    text = Gtk::CellRendererText.new
    created = Gtk::TreeViewColumn.new
    created.title = 'Created Date'
    created.pack_start text, expand: false, fill: false, padding: 0
    created.set_attributes text, text: 4
    created.expand = true
    created.resizable = true

    new_folder = Gtk::MenuItem.new 'Create New Folder'
    upload_folder = Gtk::MenuItem.new 'Upload Folder'
    upload_file = Gtk::MenuItem.new 'Upload File'

    menu = Gtk::Menu.new
    menu.append new_folder
    menu.append upload_folder
    menu.append upload_file
    menu.show_all

    treeview = Gtk::TreeView.new
    treeview.model = liststore
    treeview.append_column filename
    treeview.append_column filesize
    treeview.append_column filetype
    treeview.append_column created
    treeview.signal_connect 'button-press-event' do |this, event|
      if event.button == 3
        menu.popup nil, nil, event.button, event.time
      end
      false
    end
    treeview.rules_hint = true

    swindow = Gtk::ScrolledWindow.new nil, nil
    swindow.shadow_type = Gtk::ShadowType::NONE
    swindow.set_policy Gtk::PolicyType::NEVER, Gtk::PolicyType::AUTOMATIC
    swindow.style_context.junction_sides = (Gtk::JunctionSides::TOP |
                                            Gtk::JunctionSides::LEFT)
    #swindow.add iconview
    swindow.add treeview

    hpaned = Gtk::Paned.new :horizontal
    hpaned.pack1 places,  resize: false, shrink: false
    hpaned.pack2 swindow, resize: true,  shrink: false

    vbox = Gtk::Box.new :vertical, 0
    vbox.pack_start toolbar, expand: false, fill: false, padding: 0
    vbox.pack_start hpaned,  expand: true,  fill: true,  padding: 0

    add vbox

    set_title 'Sake'
    set_default_size 700, 400
    set_window_position Gtk::WindowPosition::CENTER
    set_icon 'assets/sake.png'
    signal_connect 'destroy' do
      Gtk.main_quit
    end

    show_all
  end
end

App.new
begin
  Gtk.main
rescue Interrupt
  puts ''
  Gtk.main_quit
end
